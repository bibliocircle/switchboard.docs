{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Switchboard Documentation Switchboard is an open source mock services generator.","title":"Overview"},{"location":"#switchboard-documentation","text":"Switchboard is an open source mock services generator.","title":"Switchboard Documentation"},{"location":"roadmap/","text":"Mock Services Ability to create a REST mock service Ability to add mock endpoints for REST mock services Ability to create a GraphQL mock service \ud83c\udfaf Ability to add a mock for a query \ud83c\udfaf Ability to create a mock for a mutation \ud83c\udfaf Ability to configure global response headers Ability to create scenarios of type 'HTTP Response' Ability to create scenarios of type 'Proxy' Ability to configure proxy request headers and proxy response headers in proxy scenarios Partial Proxying: If enabled, Ability to configure an upstream endpoint for mock service, such that requests to any non-implemented endpoints in the mock service will be proxied to the upstream Ability to configure proxy request headers and proxy response headers in partial proxy mode Should be able activate a random scenario, from the configured scenarios. Ability to create scenarios of type 'Network Condition' Ability to create scenario 'Socket Hang up' Ability to configure a response delay Ability to send a response body with randomly generated data using faker.js Ability to send a dynamic response depending on the content of the request, using JSONata mapping Ability to update mock endpoints Ability to delete a scenario Ability to delete mock endpoints Ability to view mock service configuration Ability to view all mock services Ability to configure CORS for a mock service Workspaces Ability to create a workspace Ability to update a workspace Ability to list workspaces Ability to delete a workspace Ability to view request/response log for the workspace History Ability to view request/response log for workspace Ability to view request/response log for each endpoint in workspace Ability to clear activity log for workspace Ability to export activity log for workspace Importing Ability to import an OpenAPI Spec and auto generate the mock service Ability to import a Switchboard dump file Exporting Ability to export a mock service config as a Switchboard dump file Configuration API Ability to create an API client that generates a Client ID/Client Secret key pair","title":"Roadmap \ud83c\udfc1"},{"location":"roadmap/#mock-services","text":"Ability to create a REST mock service Ability to add mock endpoints for REST mock services Ability to create a GraphQL mock service \ud83c\udfaf Ability to add a mock for a query \ud83c\udfaf Ability to create a mock for a mutation \ud83c\udfaf Ability to configure global response headers Ability to create scenarios of type 'HTTP Response' Ability to create scenarios of type 'Proxy' Ability to configure proxy request headers and proxy response headers in proxy scenarios Partial Proxying: If enabled, Ability to configure an upstream endpoint for mock service, such that requests to any non-implemented endpoints in the mock service will be proxied to the upstream Ability to configure proxy request headers and proxy response headers in partial proxy mode Should be able activate a random scenario, from the configured scenarios. Ability to create scenarios of type 'Network Condition' Ability to create scenario 'Socket Hang up' Ability to configure a response delay Ability to send a response body with randomly generated data using faker.js Ability to send a dynamic response depending on the content of the request, using JSONata mapping Ability to update mock endpoints Ability to delete a scenario Ability to delete mock endpoints Ability to view mock service configuration Ability to view all mock services Ability to configure CORS for a mock service","title":"Mock Services"},{"location":"roadmap/#workspaces","text":"Ability to create a workspace Ability to update a workspace Ability to list workspaces Ability to delete a workspace Ability to view request/response log for the workspace","title":"Workspaces"},{"location":"roadmap/#history","text":"Ability to view request/response log for workspace Ability to view request/response log for each endpoint in workspace Ability to clear activity log for workspace Ability to export activity log for workspace","title":"History"},{"location":"roadmap/#importing","text":"Ability to import an OpenAPI Spec and auto generate the mock service Ability to import a Switchboard dump file","title":"Importing"},{"location":"roadmap/#exporting","text":"Ability to export a mock service config as a Switchboard dump file","title":"Exporting"},{"location":"roadmap/#configuration-api","text":"Ability to create an API client that generates a Client ID/Client Secret key pair","title":"Configuration API"},{"location":"tags/","text":"","title":"Tags \ud83c\udff7"},{"location":"api/activity/","text":"Retrieve Workspace Activity Log Request GET /workspace/:workspaceId/activity Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"request\" : { \"hostname\" : \"mock.example.com\" , \"port\" : 443 , \"path\" : \"/some/mock-endpoint\" , \"method\" : \"POST\" , \"headers\" : { \"Accept\" : \"application/json\" , \"Authorization\" : \"Bearer d9571856-623c-4dc6-bf0e-afa627b998b1\" }, \"bodyBase64Encoded\" : \"eyAidGVzdCI6IDEyMyB9\" }, \"response\" : { \"statusCode\" : 200 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Cache-Control\" : \"nocache\" , \"Server\" : \"Switchboard/1.0.0\" }, \"bodyBase64Encoded\" : \"eyAidGVzdCI6IDEyMyB9\" , \"responseTimeMs\" : 100 }, \"metadata\" : { \"scenarioId\" : \"63dd809d-8430-445a-98ef-a5e67b85169b\" , }, \"timestamp\" : \"2022-05-23T19:58:39.814Z\" } ] } Clear Workspace Activity Request DELETE /workspace/:workspaceId/activity Response 200 OK","title":"Activity"},{"location":"api/activity/#retrieve-workspace-activity-log","text":"Request GET /workspace/:workspaceId/activity Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"request\" : { \"hostname\" : \"mock.example.com\" , \"port\" : 443 , \"path\" : \"/some/mock-endpoint\" , \"method\" : \"POST\" , \"headers\" : { \"Accept\" : \"application/json\" , \"Authorization\" : \"Bearer d9571856-623c-4dc6-bf0e-afa627b998b1\" }, \"bodyBase64Encoded\" : \"eyAidGVzdCI6IDEyMyB9\" }, \"response\" : { \"statusCode\" : 200 , \"headers\" : { \"Content-Type\" : \"application/json\" , \"Cache-Control\" : \"nocache\" , \"Server\" : \"Switchboard/1.0.0\" }, \"bodyBase64Encoded\" : \"eyAidGVzdCI6IDEyMyB9\" , \"responseTimeMs\" : 100 }, \"metadata\" : { \"scenarioId\" : \"63dd809d-8430-445a-98ef-a5e67b85169b\" , }, \"timestamp\" : \"2022-05-23T19:58:39.814Z\" } ] }","title":"Retrieve Workspace Activity Log"},{"location":"api/activity/#clear-workspace-activity","text":"Request DELETE /workspace/:workspaceId/activity Response 200 OK","title":"Clear Workspace Activity"},{"location":"api/auth/","text":"Coming Soon","title":"Authentication"},{"location":"api/mock-services/","text":"Listing Mock Services Request GET /configuration/mock-services Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" }, { \"id\" : \"aca7751a-b529-4aa3-9f4f-d462164b4ada\" , \"type\" : \"REST\" , \"title\" : \"Auth mock service\" , \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } ] } Retrieving Mock Service Configuration Request GET /configuration/mock-service/:mockServiceId Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } } Creating a Mock Service Request POST /configuration/mock-service { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } Response 201 OK { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" } Updating a Mock Service Request PUT /configuration/mock-service/:mockServiceId { \"data\": { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } } Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } } Deleting a Mock Service Request DELETE /configuration/mock-services/:mockServiceId Response 200 Ok","title":"Scenarios"},{"location":"api/mock-services/#listing-mock-services","text":"Request GET /configuration/mock-services Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" }, { \"id\" : \"aca7751a-b529-4aa3-9f4f-d462164b4ada\" , \"type\" : \"REST\" , \"title\" : \"Auth mock service\" , \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } ] }","title":"Listing Mock Services"},{"location":"api/mock-services/#retrieving-mock-service-configuration","text":"Request GET /configuration/mock-service/:mockServiceId Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } }","title":"Retrieving Mock Service Configuration"},{"location":"api/mock-services/#creating-a-mock-service","text":"Request POST /configuration/mock-service { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } Response 201 OK { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" }","title":"Creating a Mock Service"},{"location":"api/mock-services/#updating-a-mock-service","text":"Request PUT /configuration/mock-service/:mockServiceId { \"data\": { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } } Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } }","title":"Updating a Mock Service"},{"location":"api/mock-services/#deleting-a-mock-service","text":"Request DELETE /configuration/mock-services/:mockServiceId Response 200 Ok","title":"Deleting a Mock Service"},{"location":"api/setup/","text":"Switchboard exposes a configuration API that can be used to dynamically change mock service configurations for automated testing. This is particularly useful to programmatically change the mock services' behaviours in tests and observe how the application behaves.","title":"Setting up"},{"location":"api/workspaces/","text":"List Workspaces Request GET /configuration/workspaces Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"name\" : \"Awesome Workspace\" , \"createdAt\" : \"2022-06-04T12:04:39.531Z\" , \"expiresAt\" : \"2022-06-21T12:04:39.531Z\" }, { \"id\" : \"57de2403-855b-4d66-b872-813cd8525f56\" , \"name\" : \"Pinocchio's workspace\" , \"createdAt\" : \"2022-06-04T12:04:39.531Z\" , \"expiresAt\" : \"2022-06-21T12:04:39.531Z\" } ] } Get Workspace Configuration Request GET /configuration/workspace/:workspaceId Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } } Creating a Mock Service Request POST /configuration/mock-service { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } Response 201 OK { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" } Updating a Mock Service Request PUT /configuration/mock-service/:mockServiceId { \"data\": { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } } Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } } Deleting a Mock Service Request DELETE /configuration/mock-services/:mockServiceId Response 200 Ok","title":"Workspaces"},{"location":"api/workspaces/#list-workspaces","text":"Request GET /configuration/workspaces Response 200 OK { \"data\" : [ { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"name\" : \"Awesome Workspace\" , \"createdAt\" : \"2022-06-04T12:04:39.531Z\" , \"expiresAt\" : \"2022-06-21T12:04:39.531Z\" }, { \"id\" : \"57de2403-855b-4d66-b872-813cd8525f56\" , \"name\" : \"Pinocchio's workspace\" , \"createdAt\" : \"2022-06-04T12:04:39.531Z\" , \"expiresAt\" : \"2022-06-21T12:04:39.531Z\" } ] }","title":"List Workspaces"},{"location":"api/workspaces/#get-workspace-configuration","text":"Request GET /configuration/workspace/:workspaceId Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } }","title":"Get Workspace Configuration"},{"location":"api/workspaces/#creating-a-mock-service","text":"Request POST /configuration/mock-service { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } Response 201 OK { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" }","title":"Creating a Mock Service"},{"location":"api/workspaces/#updating-a-mock-service","text":"Request PUT /configuration/mock-service/:mockServiceId { \"data\": { \"type\": \"REST\", \"title\": \"Orders mock service\", \"config\": { \"cors\": { \"allowedOrigins\": [\"test.example.com\"], \"allowedMethods\": [\"GET\", \"POST\", \"DELETE\", \"PUT\"], \"allowedHeaders\": [] }, \"defaultResponseHeaders\": { \"x-mocked-response\": true }, \"upstreams\": [ { \"name\": \"Orders API Dev\", \"url\": \"https://dev.example.com/orders\" }, { \"name\": \"Orders API Staging\", \"url\": \"https://staging.example.com/orders\" } ] } } } Response 200 OK { \"data\" : { \"id\" : \"e8c5772e-686f-41de-aed5-2dc0dc3f5f65\" , \"type\" : \"REST\" , \"title\" : \"Orders mock service\" , \"config\" : { \"cors\" : { \"allowedOrigins\" : [ \"test.example.com\" ], \"allowedMethods\" : [ \"GET\" , \"POST\" , \"DELETE\" , \"PUT\" ], \"allowedHeaders\" : [] }, \"defaultResponseHeaders\" : { \"x-mocked-response\" : true }, \"upstreams\" : [ { \"name\" : \"Orders API Dev\" , \"url\" : \"https://dev.example.com/orders\" }, { \"name\" : \"Orders API Staging\" , \"url\" : \"https://staging.example.com/orders\" } ] }, \"createdAt\" : \"2022-05-23T19:58:39.814Z\" , \"updatedAt\" : \"2022-05-23T19:58:39.814Z\" } }","title":"Updating a Mock Service"},{"location":"api/workspaces/#deleting-a-mock-service","text":"Request DELETE /configuration/mock-services/:mockServiceId Response 200 Ok","title":"Deleting a Mock Service"},{"location":"importing/openapi-import/","text":"Coming Soon","title":"Import Open API Spec"},{"location":"mockservices/ms-intro/","text":"Coming Soon","title":"Ms intro"},{"location":"mockservices/rest/","text":"","title":"REST Mock Services"},{"location":"mockservices/templating/","text":"Switchboard provides a templating engine which you can use to generate random data in mock service responses by embedding placeholders in the template using {{placeholder}} notation. The following is an example to demonstrate how to use templating. Input Template Example { \"NamePrefix\" : \"{{NamePrefix}}\" , \"NameSuffix\" : \"{{NameSuffix}}\" , \"FirstName\" : \"{{FirstName}}\" , \"LastName\" : \"{{LastName}}\" , \"Gender\" : \"{{Gender}}\" , \"SSN\" : \"{{SSN}}\" , \"Hobby\" : \"{{Hobby}}\" , } Output { \"NamePrefix\" : \"Miss\" , \"NameSuffix\" : \"IV\" , \"FirstName\" : \"Liliana\" , \"LastName\" : \"Jerde\" , \"Gender\" : \"male\" , \"SSN\" : \"265866522\" , \"Hobby\" : \"Iceboat racing\" , } All Available Random Generator Placeholders Adverb Animal AnimalType AppName Boolean CarFuelType CarMaker CarModel CarTransmissionType CarType CelebrityActor CelebrityBusiness CelebritySport City Colour CompanyName Country CountryAbr CreditCardCvv CreditCardExpiry CreditCardNumber CreditCardType CurrencyLong CurrencyShort DomainName DomainSuffix Email FirstName Fruit Gamertag Gender HexColour Hobby Hour HTTPMethod HTTPStatusCode IPv4 IPv6 ISODate JobTitle Language LanguageCode LastName Latitude LogLevel Longitude LoremIpsumParagraph LoremIpsumSentence LoremIpsumWord Minute Month MonthText NamePrefix NameSuffix Noun Number PetName Phone PhoneFormatted Preposition ProgrammingLanguage RandomString RGBColour Second SemVer SSN State StateAbr Street StreetName StreetNumber StreetPrefix StreetSuffix TimeZone TimeZoneFull URL UserAgent UUID Vegetable Verb Word Year Zip","title":"Random Data Generation"},{"location":"mockservices/templating/#all-available-random-generator-placeholders","text":"Adverb Animal AnimalType AppName Boolean CarFuelType CarMaker CarModel CarTransmissionType CarType CelebrityActor CelebrityBusiness CelebritySport City Colour CompanyName Country CountryAbr CreditCardCvv CreditCardExpiry CreditCardNumber CreditCardType CurrencyLong CurrencyShort DomainName DomainSuffix Email FirstName Fruit Gamertag Gender HexColour Hobby Hour HTTPMethod HTTPStatusCode IPv4 IPv6 ISODate JobTitle Language LanguageCode LastName Latitude LogLevel Longitude LoremIpsumParagraph LoremIpsumSentence LoremIpsumWord Minute Month MonthText NamePrefix NameSuffix Noun Number PetName Phone PhoneFormatted Preposition ProgrammingLanguage RandomString RGBColour Second SemVer SSN State StateAbr Street StreetName StreetNumber StreetPrefix StreetSuffix TimeZone TimeZoneFull URL UserAgent UUID Vegetable Verb Word Year Zip","title":"All Available Random Generator Placeholders"},{"location":"workspaces/ws-intro/","text":"Coming Soon","title":"Introduction"},{"location":"tags/","text":"","title":"Tags \ud83c\udff7"}]}